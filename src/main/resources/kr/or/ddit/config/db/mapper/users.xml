<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="users">
	
	<!-- 일반회원 정보 등록 -->
	<insert id="insert_users" parameterType="usersVo">
		insert into users
		values(
			#{user_id},
			nvl(#{user_name, jdbcType=VARCHAR}, null),
			nvl(#{bg_img, jdbcType=VARCHAR}, null),
			nvl(#{bg_path, jdbcType=VARCHAR}, null),
			nvl(#{profile_img, jdbcType=VARCHAR}, null),
			nvl(#{profile_path, jdbcType=VARCHAR}, null),
			nvl(#{addr1, jdbcType=VARCHAR}, null),
			nvl(#{addr2, jdbcType=VARCHAR}, null),
			nvl(#{zipcode, jdbcType=VARCHAR}, null),
			nvl(#{email, jdbcType=VARCHAR}, null),
			nvl(#{telno, jdbcType=VARCHAR}, null),
			nvl(#{user_birth, jdbcType=VARCHAR}, null),
			nvl(#{persnal_url, jdbcType=VARCHAR}, null),
			nvl(#{profile_contents, jdbcType=VARCHAR}, null)
		)
	</insert>
	
	<!-- 전체회원 조회 -->
	<select id="select_allUsers" resultType="usersVo">
		select user_id, user_name, bg_img, bg_path, profile_img, profile_path, addr1, addr2, zipcode, email, telno, user_birth, persnal_url, profile_contents
		  from users
	</select>
	
	<!-- 회원정보 조회 -->
	<select id="select_userInfo" parameterType="String" resultType="usersVo">
		select user_id, user_name, bg_img, bg_path, profile_img, profile_path, addr1, addr2, zipcode, email, telno, user_birth, persnal_url, profile_contents
		  from users
		 where user_id = #{user_id}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="update_userInfo" parameterType="usersVo">
		update users
		   set user_name 	= nvl(#{user_name, jdbcType=VARCHAR}, user_name),
		       bg_img	 	= nvl(#{bg_img, jdbcType=VARCHAR}, bg_img),
		       bg_path	 	= nvl(#{bg_path, jdbcType=VARCHAR}, bg_path),
		       profile_img  = nvl(#{profile_img, jdbcType=VARCHAR}, profile_img),
		       profile_path	= nvl(#{profile_path, jdbcType=VARCHAR}, profile_path),
		       addr1		= nvl(#{addr1, jdbcType=VARCHAR}, addr1),
		       addr2		= nvl(#{addr2, jdbcType=VARCHAR}, addr2),
		       zipcode		= nvl(#{zipcode, jdbcType=VARCHAR}, zipcode),
		       email		= nvl(#{email, jdbcType=VARCHAR}, email),
		       telno		= nvl(#{telno, jdbcType=VARCHAR}, telno),
		       user_birth	= nvl(#{user_birth, jdbcType=VARCHAR}, user_birth),
		       persnal_url	= nvl(#{persnal_url, jdbcType=VARCHAR}, persnal_url),
		       profile_contents = nvl(#{profile_contents, jdbcType=VARCHAR}, profile_contents)
		 where user_id = #{user_id}  
	</update>

	<!-- 프로필 조회 -->
	<select id="select_introduce" parameterType="String" resultType="String">
		select a.introduce
		  from (select decode(c_info.resign_date,null,c_info.corporate_name||' '|| c_info.job_position, e_info.school_name||' '||'학생') as introduce
		          from career_info c_info,education_info e_info
			     where c_info.user_id = e_info.user_id
			       and c_info.user_id = #{user_id}
			     order by c_info.join_date desc, e_info.admission desc) a
		 where rownum &lt;= 1
	</select>
	
</mapper>