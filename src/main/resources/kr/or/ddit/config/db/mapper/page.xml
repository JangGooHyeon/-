<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="page">

	<!-- 섹션 추가 -->
	<insert id="insert_page" parameterType="pageVo">
	
		<selectKey keyProperty="page_code" resultType="String" order="AFTER">
		  	select 
		  		page_code_seq.currval
		  	from 
		  		dual
		</selectKey>
		
		insert into page
		values (
			page_code_seq.nextval,
			#{section_code},
			#{page_title},
			#{page_contents},
			sysdate,
			0,
			#{page_thumbnail},
			#{bg_color}
		)
	</insert>
	
	<!-- 섹션의 전체 페이지 조회 -->
	<select id="select_pageList" parameterType="String" resultType="pageVo">
		select a.page_code, a.section_code, a.page_title, a.page_contents, a.write_date, a.view_count, a.page_thumbnail, a.bg_color, b.good_cnt, c.comment_cnt

			from   page a,
			
			        (select count(*) as good_cnt, ref_code
			          from good
			         where division = 22
			        group by ref_code) b,
			        
			       (select count(*) comment_cnt, ref_code
			          from post_comment
			         where division = 22
			        group by ref_code) c
			        
			where a.section_code = #{section_code}
			and   a.page_code = b.ref_code(+)
			and   a.page_code = c.ref_code(+)
			order by write_date desc
	</select>
	
	<!-- 페이지 정보 조회 -->
	<select id="select_pageInfo" parameterType="String" resultType="pageVo">
		select page_code, section_code, page_title, page_contents, write_date, view_count, page_thumbnail, bg_color
		  from page
		 where page_code = #{ page_code }
	</select>
	
	<!-- 페이지 수정 -->
	<update id="update_page" parameterType="pageVo">
		update page
		   set section_code   	= nvl(#{section_code, jdbcType=VARCHAR}, section_code),
		   	   page_title   	= nvl(#{page_title, jdbcType=VARCHAR}, page_title),
		   	   page_contents 	= nvl(#{page_contents, jdbcType=VARCHAR}, page_contents),
		   	   write_date 		= sysdate,
		   	   view_count 		= nvl(#{view_count, jdbcType=VARCHAR}, view_count),
		   	   page_thumbnail 	= nvl(#{page_thumbnail, jdbcType=VARCHAR}, page_thumbnail),
		   	   bg_color 		= nvl(#{bg_color, jdbcType=VARCHAR}, bg_color)
		 where page_code = #{ page_code }  
	</update>
	
	<!-- 페이지 삭제 -->
	<delete id="delete_page" parameterType="String">
		delete page
		 where page_code = #{ page_code }
	</delete>
	
	<!-- 회원이 작성한 모든 page 리스트 조회 -->
	<select id="select_pageAllList" parameterType="String" resultType="pageVo">
		select  c.*, d.*, e.good_cnt, f.comment_cnt
  			from  (select a.user_id, a.portfolio_code, b.section_code
        				from portfolio a, section b
        			where user_id = #{ user_id }
           			and a.portfolio_code = b.portfolio_code) c, page d,
       
			       (select count(*) as good_cnt, ref_code
			          	from good
			        where division = 22
			        group by ref_code) e,
        
			       (select count(*) comment_cnt, ref_code
			          	from post_comment
			        where division = 22
			        group by ref_code) f
        
		 where d.section_code = c.section_code
		   and d.page_code = e.ref_code(+)
		   and d.page_code = f.ref_code(+)
		   
		order by d.write_date desc
	</select>
	
	
	
	
	
	
</mapper> 