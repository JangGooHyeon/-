<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="good">
	
	<!-- 좋아요 정보 등록 -->	
	<insert id="insert_goodInfo" parameterType="goodVo">
		insert into good
		values(
			good_code_seq.nextval,
			#{mem_id},
			#{ref_code},
			#{division},
			sysdate
		)
		
		<selectKey resultType="String" keyProperty="good_code" order="AFTER">
			select good_code_seq.currval
			  from dual
		</selectKey>
	</insert>
	
	
	
	<!-- 좋아요 정보 삭제 -->
	<delete id="delete_goodInfo" parameterType="goodVo">
		delete good
		 where ref_code = #{ref_code}
		   and division = #{division}
		   and mem_id = #{mem_id}
	</delete>
	
	<!-- 회원의 좋아요 정보 조회 -->
	<select id="select_goodInfo" parameterType="String" resultType="goodVo">
		select good_code, mem_id, ref_code, division, good_date
		  from good
		 where mem_id = #{mem_id}
		order by good_date desc
	</select>
	
	<!-- 게시글 좋아요 갯수 조회 -->
	<select id="select_goodCount" parameterType="goodVo" resultType="int">
		select count(*)
		  from good
		 where ref_code = #{ref_code}
		   and division = #{division}
	</select>
	
	<!-- 좋아요 한 회원 조회 -->
	<select id="select_pushGoodMember" parameterType="goodVo" resultType="goodVo">
		select a.*, b.mem_name, b.profile_path, c.mem_division
		  from good a, (select user_name as mem_name, user_id as mem_id, profile_path as profile_path
		                  from users
		                union all
		                select corp_name as mem_name, corp_id as mem_id, logo_path as profile_path
		                  from corporation) b,
		               (select mem_id, mem_division
                  		  from member) c
		 where a.mem_id = b.mem_id
		   and a.mem_id  = c.mem_id
		   and division = #{division}
		   and ref_code = #{ref_code}
	</select>

	<!-- 회원이 좋아요 한 글 번호 목록 조회 -->
	<select id="select_pushedGoodPost" parameterType="String" resultType="goodVo">
		select mem_id, ref_code
		  from good
		 where division = 28
		   and ref_code in (select post_code
		                      from post)
		   and mem_id = #{mem_id}
	</select>
	
	<!-- 좋아요 코드 찾기 -->
	<select id="search_goodcode" parameterType="goodVo" resultType="java.lang.String">
	select good_code
	  from good
	 where mem_id = #{mem_id}
	   and ref_code = #{ref_code}
	   and division = #{division}
	</select>
	
	<!-- 좋아요 리스트 조회 - 정거니 -->
	<select id="select_goodList" parameterType="goodVo" resultType="goodVo">
	select *
	  from good
	 where mem_id = #{mem_id}
	   and division = #{division}
	</select>
	
	<!-- 좋아요 취소 - 정거니 -->
	<delete id="delete_good" parameterType="String">
		delete good
		 where good_code = #{ good_code }
	</delete>
	
	<!-- 회원이 작성한 page의 좋아요 수 조회 -->
	<select id="select_goodCnt" parameterType="String" resultType="int">
		select count(*)
  			from (select a.user_id, a.portfolio_code, b.section_code
          			from portfolio a, section b
         			where user_id = #{ user_id }
           			and a.portfolio_code = b.portfolio_code) c, page d,
       
       				(select *
          				from good
         				where division = 22) e
			where d.section_code = c.section_code
  			and d.page_code = e.ref_code
	</select>
	
	
</mapper>