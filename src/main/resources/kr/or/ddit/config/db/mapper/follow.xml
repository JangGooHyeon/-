<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="follow">

	<!-- 팔로우 정보 등록 -->
	<insert id="insert_follow" parameterType="followVo">
		insert into follow
		values (
			follow_code_seq.nextval,
			#{mem_id},
			#{ref_keyword},
			#{division}
		)
	</insert>
	
	<!-- 팔로우 정보 삭제 -->
	<delete id="delete_follow" parameterType="followVo">
		delete follow
		 where (mem_id = #{mem_id} or ref_keyword = #{mem_id})
		   and (ref_keyword = #{ref_keyword} or mem_id = #{ref_keyword})
	</delete>
	
	<!-- 회원의 전체 팔로우 목록 조회 -->
	<select id="select_followList" parameterType="String" resultType="followVo">
		select follow_code, mem_id, ref_keyword, division
		  from follow
		 where mem_id = #{mem_id}
	</select>
	
	<!-- 특정 팔로우 조회 -->
	<select id="select_followLog" parameterType="followVo" resultType="followVo">
		select follow_code, mem_id, ref_keyword, division
		  from follow
		 where mem_id = #{ mem_id }
		   and ref_keyword = ${ ref_keyword }
		   and division = #{ division } 
	</select>
	
	

	<!-- 종류별 팔로우 목록 조회 -->
	<select id="select_followKindList" parameterType="paginationVo" resultType="followVo">
		select * 
		  from (select a.*, rownum rn
		          from (select follow_code, mem_id, ref_keyword, division
		                  from follow
		                 where mem_id = #{mem_id}
		                   and division = #{division}) a
		        order by follow_code desc)
		 where rn between (#{page}-1) * #{pageSize} and #{page}*#{pageSize}
	</select>
	
	<!-- 전체 팔로잉 수 조회 -->
 	<select id="getFollowingCnt" parameterType="String" resultType="Integer">
  		select count(*) from follow where mem_id=#{mem_id}
  	</select>
  	
  	<!-- 전체 팔로워 수 조회 -->
 	<select id="getFollowerCnt" parameterType="String" resultType="Integer">
  		select count(*) from follow where ref_keyword=#{mem_id}
  	</select>
  	
  	<!-- 팔로잉 목록 조회 -->
	<select id="select_followerList" parameterType="String" resultType="followVo">
		select a.follow_code
		     , a.mem_id
		     , a.ref_keyword
		     , a.division
		     , b.profile_path as image_path
		     , b.user_name as keyword_name
		     , m.mem_division as mem_division
		  from follow a, users b, member m 
		 where ref_keyword=#{mem_id}
		   and a.mem_id = b.user_id
		   and a.mem_id = m.mem_id
		 
		 union all
		 
		select a.follow_code
		     , a.mem_id
		     , a.ref_keyword
		     , a.division
		     , c.logo_path
		     , c.corp_name
		     , m.mem_division
		  from follow a, corporation c, member m  
		 where ref_keyword=#{mem_id}
		   and a.mem_id = c.corp_id
		   and a.mem_id = m.mem_id
	</select>
  	
	
	<!-- 팔로잉 목록 조회 -->
	<select id="select_followingList" parameterType="String" resultType="followVo">
		select a.follow_code
		     , a.mem_id
		     , a.ref_keyword
		     , a.division
		     , b.profile_path as image_path
		     , b.user_name as keyword_name
		  from follow a, users b 
		 where mem_id=#{mem_id}
		   and  a.division = '43'
		   and a.ref_keyword = b.user_id
		 
		 union all
		 
		select a.follow_code
		     , a.mem_id
		     , a.ref_keyword
		     , a.division
		     , c.logo_path
		     , c.corp_name
		  from follow a, corporation c  
		 where mem_id=#{mem_id}
		   and a.division = '11'
		   and a.ref_keyword = c.corp_id
		   
		 union all
		 
		select a.follow_code
		     , a.mem_id
		     , a.ref_keyword
		     , a.division
		     , null
		     , null
		  from follow a  
		 where a.mem_id=#{mem_id}
		   and a.division = '16'
	</select>
	
	<!-- 사용자와 상대방과의 팔로우 검색 -->
	<select id="select_oneFollow" parameterType="followVo" resultType="followVo">
		select *
		  from follow
		 where mem_id = #{mem_id}
		   and ref_keyword = #{ref_keyword}
		   and division = '43'
	</select>
	
	<!-- 해시태그 팔로워 수 조회 -->
	<select id="select_hashtagFollowCount" parameterType="String" resultType="int">
		select count(*)
		  from follow
		 where division = 16
		   and ref_keyword = #{ref_keyword}	
	</select>
	
	<!-- 회사 팔로우 -->
	<insert id="insert_corpFollow" parameterType="followVo">
		insert into follow
		values(
			follow_code_seq.nextval,
			#{mem_id},
			#{ref_keyword},
			11
		)
	</insert>
	
	<!-- 회사 언팔로우 -->
	<delete id="delete_corpFollow" parameterType="followVo">
		delete from follow
		 where mem_id = #{mem_id}
		   and ref_keyword = #{ref_keyword}
		   and division = 11
	</delete>
	
	<!-- 회원 팔로우 -->
	<insert id="insert_userFollow" parameterType="followVo">
		insert into follow
		values(
			follow_code_seq.nextval,
			#{mem_id},
			#{ref_keyword},
			43
		)
	</insert>
	
	<!-- 회원 언팔로우 -->
	<delete id="delete_userFollow" parameterType="followVo">
		delete from follow
		 where mem_id = #{mem_id}
		   and ref_keyword = #{ref_keyword}
		   and division = 43
	</delete>

	<select id="select_followHashtagInfo" parameterType="followVo" resultType="int">
		select count(*)
		  from follow
		 where mem_id = #{mem_id}
		   and ref_keyword = #{ref_keyword}
		   and division = 16
	</select>
	
	<!-- 인맥 - 회사 - 언팔로우 -->
	<delete id="delete_personalFollow" parameterType="String">
		delete from follow
		 where follow_code = #{follow_code}
	</delete>
	
	<!-- 인맥 - 신선한 시각 팔로우 -->
	<insert id="insert_feedFollow" parameterType="followVo">
		insert into follow
		values (
			follow_code_seq.nextval,
			#{mem_id},
			#{ref_keyword},
			#{division}
		)
	</insert>
	
	<!-- 회사페이지에서 팔로우 언팔로우 확인 -->
	<select id="follow_unfollow" parameterType="followVo" resultType="int">
	select count(*)
	from follow
	where FOLLOW.MEM_ID = #{session.mem_id}
	and follow.ref_keyWord=#{corporInfo.corp_id}
	</select>
	
	<!-- 채팅 초대할 유저의 팔로우들(회사,회원)  -->
	<select id="select_followChatList" parameterType="String" resultType="map">
		select a.mem_id,
                   decode(a.mem_id,b.user_id,b.user_name,c.corp_name) as name,
                   decode(a.mem_id,b.user_id,b.PROFILE_PATH,c.LOGO_PATH) as path,
                   decode(a.mem_id,b.user_Id,d.introduce,c.INDUSTRY_TYPE) as introduce
           from member a, users b, CORPORATION c, (select user_id,   
                                                         substr(listagg(beintroduce, ' ') within group (order by graduation desc), 0, instr(listagg(beintroduce, ' ') within group (order by graduation desc), ' ', 1, 2)) as introduce
                                                               
                                                  from (select a.user_id,
                                                          case when b.resign_date is null then b.corporate_name ||' ' ||job_position || ' '
                                                               when b.resign_date is not null then a.school_name ||' ' || a.degree_name || ' '
                                                           end as beintroduce,
                                                               a.graduation
                                                          from education_info a, career_info b
                                                         where a.user_id = b.user_id
                                                           and (b.user_id,nvl(b.resign_date,to_date('3000/01/01','yyyy/mm/dd'))) in ( select career_info.user_id,  max(nvl(career_info.resign_date,to_date('3000/01/01','yyyy/mm/dd')))
                                                                                                                                        from career_info, education_info
                                                                                                                                       where career_info.user_id = education_info.user_id
                                                                                                                                       group by career_info.user_id)
                                                         order by a.graduation desc)
                                                 group by user_id) d
          where a.mem_id = b.user_id(+)
            and a.mem_id = d.user_id(+)
            and c.corp_id(+) = a.mem_id
            and a.mem_id in( select REF_KEYWORD
                             from follow
                            where mem_id = #{mem_id}
                              and (division = '11' or division = '43'))
	</select>
	
	<select id="select_hashtagFollowList" parameterType="String" resultType="followVo">
		select follow_code, mem_id, ref_keyword, division
		  from follow
		 where mem_id = #{user_id}
		   and division = '16'
	</select>
	
	<!-- 회원의 팔로우리스트(회원) 조회 -->
	<select id="select_userFollowList" parameterType="String" resultType="followVo">
		select follow_code, mem_id, ref_keyword, division
		  from follow
		 where mem_id = #{ mem_id }
		   and division = '43'
	</select>
	
</mapper> 