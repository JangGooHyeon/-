<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="education_info">
	
	<!-- 학력 정보 등록 -->
	<insert id="insert_education_info" parameterType="education_infoVo">
		insert into education_info
		values(
			education_code_seq.nextval,
			#{user_id},
			nvl(#{school_name, jdbcType=VARCHAR}, null),
			nvl(#{degree_name, jdbcType=VARCHAR}, null),
			nvl(#{major, jdbcType=VARCHAR}, null),
			nvl(#{admission, jdbcType=VARCHAR}, null),
			nvl(#{graduation, jdbcType=VARCHAR}, null),
			nvl(#{grade, jdbcType=VARCHAR}, null),
			nvl(#{contents, jdbcType=VARCHAR}, null)
		)
		
		 <selectKey keyProperty="currval" resultType="java.lang.String" order="AFTER">
	          select education_code_seq.currval 
	            from dual
	     </selectKey>
	</insert>
	
	<!-- 사용자의 학력정보 조회 -->
	<select id="select_educationInfo" parameterType="String" resultType="education_infoVo">
		select education_code, user_id, school_name, degree_name, major, admission, graduation, grade, contents
		  from education_info
		 where user_id = #{user_id}
		 order by graduation desc
		
	</select>
	
	<!-- 사용자의 한 건의 학력정보 조회 -->
	<select id="select_oneEducationInfo" parameterType="String" resultType="education_infoVo">
		 select education_code, user_id, school_name, degree_name, major, admission, graduation, grade, contents
		  from education_info
		 where education_code = #{education_code}
	</select>
	
	<!-- 사용자의 학력정보 업데이트 -->
	<update id="update_educationInfo" parameterType="education_infoVo">
		update education_info
		   set school_name =  nvl(#{school_name, jdbcType=VARCHAR}, null),
		       degree_name = nvl(#{degree_name, jdbcType=VARCHAR}, null),
		       major = nvl(#{major, jdbcType=VARCHAR}, null),
		       admission = nvl(#{admission, jdbcType=VARCHAR}, null),
		       graduation = nvl(#{graduation, jdbcType=VARCHAR}, null),
		       grade = nvl(#{grade, jdbcType=VARCHAR}, null),
		       contents = nvl(#{contents, jdbcType=VARCHAR}, null)
		 where education_code = #{education_code}
	</update>
	
	<!-- 사용자의 학력정보 삭제 -->
	<delete id="delete_educationInfo" parameterType="String">
		delete from education_info
			  where education_code = #{education_code}
	</delete>
	
	<!-- 특정 유저의 마지막 학력정보 조회. -->
	<select id="getLastEdu" parameterType="String" resultType="education_infoVo">
		 SELECT A.EDUCATION_CODE, A.USER_ID, A.SCHOOL_NAME, A.DEGREE_NAME, A.MAJOR, A.ADMISSION, 
		 	A.GRADUATION, A.GRADE, A.CONTENTS
		  FROM EDUCATION_INFO A, (SELECT MAX(EDUCATION_CODE) CODE
		  							FROM EDUCATION_INFO
		  						   WHERE USER_ID = #{user_id}
		  						  GROUP BY USER_ID) B
		 WHERE A.EDUCATION_CODE = B.CODE
	</select>
</mapper>