<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="corp">

	<!-- 회사 정보 등록 -->
	<insert id="insert_corp" parameterType="corporationVo">
		insert into corporation
		values(
			#{corp_id},
			nvl(#{corp_name, jdbcType=VARCHAR}, null),
			nvl(#{bg_img, jdbcType=VARCHAR}, null),
			nvl(#{bg_path, jdbcType=VARCHAR}, null),
			nvl(#{corp_logo, jdbcType=VARCHAR}, null),
			nvl(#{logo_path, jdbcType=VARCHAR}, null),
			nvl(#{addr1, jdbcType=VARCHAR}, null),
			nvl(#{addr2, jdbcType=VARCHAR}, null),
			nvl(#{zipcode, jdbcType=VARCHAR}, null),
			nvl(#{corp_birth, jdbcType=VARCHAR}, null),
			nvl(#{corp_type, jdbcType=VARCHAR}, null),
			nvl(#{industry_type, jdbcType=VARCHAR}, null),
			nvl(#{corp_url, jdbcType=VARCHAR}, null),
			nvl(#{corp_size, jdbcType=VARCHAR}, null),
			nvl(#{corp_profile, jdbcType=VARCHAR}, null),
			nvl(#{corp_code, jdbcType=VARCHAR}, null),
			nvl(#{telno, jdbcType=VARCHAR}, null),
			nvl(#{email, jdbcType=VARCHAR}, null),
			nvl(#{corp_location, jdbcType=VARCHAR}, null)
		)
	</insert>
	
	<!-- 전체회사 조회 -->
	<select id="select_allCorps" resultType="corporationVo">
		select *
		  from corporation
	</select>
	
	<!-- 특정 회사 정보 조회 -->
	<select id="select_corpInfo" parameterType="String" resultType="corporationVo">
		select *
		  from corporation
		 where corp_id = #{corp_id}
	</select>
	
	<!-- 회사정보 수정 -->
	<update id="update_corpInfo" parameterType="corporationVo">
		update corporation
		   set corp_name 	 = nvl(#{corp_name, jdbcType=VARCHAR}, corp_name),
		       bg_img	 	 = nvl(#{bg_img, jdbcType=VARCHAR}, bg_img),
		       bg_path	 	 = nvl(#{bg_path, jdbcType=VARCHAR}, bg_path),
		       corp_logo  	 = nvl(#{corp_logo, jdbcType=VARCHAR}, corp_logo),
		       logo_path	 = nvl(#{logo_path, jdbcType=VARCHAR}, logo_path),
		       addr1		 = nvl(#{addr1, jdbcType=VARCHAR}, addr1),
		       addr2		 = nvl(#{addr2, jdbcType=VARCHAR}, addr2),
		       zipcode		 = nvl(#{zipcode, jdbcType=VARCHAR}, zipcode),
		       corp_birth	 = nvl(#{corp_birth, jdbcType=VARCHAR}, corp_birth),
		       corp_type	 = nvl(#{corp_type, jdbcType=VARCHAR}, corp_type),
		       industry_type = nvl(#{industry_type, jdbcType=VARCHAR}, industry_type),
		       corp_url		 = nvl(#{corp_url, jdbcType=VARCHAR}, corp_url),
		       corp_size	 = nvl(#{corp_size, jdbcType=VARCHAR}, corp_size),
		       corp_profile	 = nvl(#{corp_profile, jdbcType=VARCHAR}, corp_profile),
		       corp_code	 = nvl(#{corp_code, jdbcType=VARCHAR}, corp_code),
		       telno	 	 = nvl(#{telno, jdbcType=VARCHAR}, telno),
		       email	 	 = nvl(#{email, jdbcType=VARCHAR}, email),
		       corp_location = nvl(#{corp_location, jdbcType=VARCHAR}, corp_location)
		 where corp_id = #{corp_id}  
	</update>
	
	<!-- 회사이름으로 특정 회사 조회. -->
	<select id="getCorp" parameterType="String" resultType="corporationVo">
		SELECT *
		  FROM CORPORATION
		 WHERE CORP_NAME = #{corp_name, jdbcType=VARCHAR}
	</select>
	
	<!-- 테스트 코드를 위한 회사 삭제 -->
	<delete id="deleteForTest">
		DELETE FROM CORPORATION
		 WHERE CORP_NAME = #{corp_name}	
	</delete>
	
	<!-- 전체 회사 수 조회. -->
	<select id="getCorpCnt" resultType="Integer">
		SELECT COUNT(*)
		  FROM CORPORATION	
	</select>
	
	<!-- 회사 검색 -->
	<select id="searchCorp" resultType="corporationVo" parameterType="String">
		SELECT * 
		  FROM CORPORATION 
		 WHERE UPPER(CORP_NAME) LIKE UPPER('%' || #{corp_name} || '%') 
		ORDER BY CORP_NAME 
	</select>
	
	
	<!-- 직원 전공 -->
	<select id="employee_major" parameterType="String" resultType="education_infoVo">
	select  a.major
			FROM education_info A, (
								SELECT USER_ID
								FROM CAREER_INFO
								WHERE CORPORATE_NAME = #{corp_name}
							) B
			WHERE A.USER_ID = B.USER_ID
	group by a.major
    order by count(*) desc
	</select>
	
	<!-- 직원 전공 count -->
	<select id="employee_major_count" parameterType="String" resultType="Integer">
	select count (*)
			FROM education_info A, (
								SELECT USER_ID
								FROM CAREER_INFO
								WHERE CORPORATE_NAME = #{corp_name}
							) B
			WHERE A.USER_ID = B.USER_ID
	group by a.major
    order by count(*) desc
	</select>
	
		<!-- 회사 전직원의 id -->
	<select id="employee_all" parameterType="String" resultType="Career_infoVo">
		 SELECT USER_ID
			FROM CAREER_INFO
			WHERE CORPORATE_NAME = #{corporate_name }
	</select>
	
	
	<!-- 회사 전직원 usersVo -->
	<select id="select_userInfo" parameterType="String" resultType="usersVo">
		SELECT
		    USER_ID,
		    USER_NAME,
		    BG_IMG,
		    BG_PATH,
		    PROFILE_IMG,
		    PROFILE_PATH,
		    ADDR1,
		    ADDR2,
		    ZIPCODE,
		    EMAIL,
		    TELNO,
		    USER_BIRTH,
		    PERSNAL_URL,
		    PROFILE_CONTENTS
		FROM USERS
		WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 회사 직원의 education_infoVo -->
	<select id="employee_education" parameterType="String" resultType="education_infoVo">
		select education_code, user_id, school_name, degree_name, major, admission, graduation, grade, contents
		  from education_info
		 where user_id = #{user_id}
		 order by graduation desc
	</select>
	
</mapper>